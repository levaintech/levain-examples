name: Release

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.version.outputs.result }}
    steps:
      - id: version
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            const semver = context.ref.replace('refs/tags/v', '')
            if (semver.match(/^[0-9]+\.[0-9]+\.[0-9]+$/)) {
                return semver
            }
            throw new Error('not semver, ref: ${context.ref}')
          result-encoding: string

  npm:
    name: Release NPM
    runs-on: ubuntu-latest
    needs: Version
    environment: NPM Publishing
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version-file: '.nvmrc'

      - run: corepack enable pnpm

      - run: pnpm install --frozen-lockfile

      - run: pnpm -r exec npm version ${{ needs.version.outputs.result }} --git-tag-version=false

      - run: pnpm turbo run build --filter='./packages/*'

      - run: npm config set "//registry.npmjs.org/:_authToken" "\${NPM_AUTH_TOKEN}" --location=global

      - run: pnpm -r publish --access public --tag latest --no-git-checks
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

      - run: npm config delete "//registry.npmjs.org/:_authToken" --location=global
        if: always()
